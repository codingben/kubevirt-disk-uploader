---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubevirt-disk-uploader
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubevirt-disk-uploader
rules:
- apiGroups: ["export.kubevirt.io"]
  resources: ["virtualmachineexports"]
  verbs: ["get", "create"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubevirt-disk-uploader
subjects:
- kind: ServiceAccount
  name: kubevirt-disk-uploader
roleRef:
  kind: Role
  name: kubevirt-disk-uploader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Pod
metadata:
  name: kubevirt-disk-uploader
spec:
  serviceAccountName: kubevirt-disk-uploader
  containers:
    - name: kubevirt-disk-uploader
      image: quay.io/boukhano/kubevirt-disk-uploader:latest
      imagePullPolicy: Always
      env:
        - name: ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: kubevirt-disk-uploader-credentials
              key: accessKeyId
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: kubevirt-disk-uploader-credentials
              key: secretKey
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      command: ["/usr/local/bin/kubevirt-disk-uploader"]
      # args: ["--vmname", "example-vm", "--volumename", "datavolumedisk", "--imagedestination", "quay.io/boukhano/example-vm-exported:latest", "--pushtimeout", "120"]
      resources:
        requests:
          memory: 3Gi
        limits:
          memory: 5Gi
      volumeMounts:
        - name: disk
          mountPath: /tmp
  volumes:
    - name: disk
      emptyDir: {}
  restartPolicy: Never
---
apiVersion: v1
kind: Secret
metadata:
  name: kubevirt-disk-uploader-credentials
type: Opaque
data:
  accessKeyId: "<ACCESS_KEY_ID>"
  secretKey: "<SECRET_KEY>"
